"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("lodash");
const vscode_languageserver_types_1 = require("vscode-languageserver-types");
const js_beautify_1 = require("js-beautify");
const strings_1 = require("../../../utils/strings");
function htmlFormat(document, currRange, formattingOptions) {
    const { value, range } = getValueAndRange(document, currRange);
    defaultHtmlOptions.indent_with_tabs = !formattingOptions.insertSpaces;
    defaultHtmlOptions.indent_size = formattingOptions.tabSize;
    let htmlFormattingOptions = defaultHtmlOptions;
    if (formattingOptions.html) {
        htmlFormattingOptions = _.assign(defaultHtmlOptions, formattingOptions.html);
    }
    const beautifiedHtml = js_beautify_1.html(value, htmlFormattingOptions);
    const wrappedHtml = strings_1.wrapSection(beautifiedHtml, /*needIndent*/ true, formattingOptions);
    return [
        {
            range,
            newText: wrappedHtml
        }
    ];
}
exports.htmlFormat = htmlFormat;
function getValueAndRange(document, currRange) {
    let value = document.getText();
    let range = currRange;
    if (currRange) {
        const startOffset = document.offsetAt(currRange.start);
        const endOffset = document.offsetAt(currRange.end);
        value = value.substring(startOffset, endOffset);
    }
    else {
        range = vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(0, 0), document.positionAt(value.length));
    }
    return { value, range };
}
const defaultHtmlOptions = {
    brace_style: 'collapse',
    end_with_newline: false,
    indent_char: ' ',
    indent_handlebars: false,
    indent_inner_html: false,
    indent_scripts: 'keep',
    indent_size: 2,
    indent_with_tabs: false,
    max_preserve_newlines: 1,
    preserve_newlines: true,
    unformatted: [
        'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',
        'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'
    ],
    wrap_line_length: 0,
    wrap_attributes: 'force-aligned' // Wrap attributes to new lines [auto|force|force-aligned|force-expand-multiline] ["auto"]
};
//# sourceMappingURL=formatters.js.map