"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vscode_languageserver_types_1 = require("vscode-languageserver-types");
function prettierFormatJs(doc, range, formatParams, prettierVSCodeConfig) {
    return prettierFormat(doc, range, formatParams, prettierVSCodeConfig, true);
}
exports.prettierFormatJs = prettierFormatJs;
function prettierFormatTs(doc, range, formatParams, prettierVSCodeConfig) {
    return prettierFormat(doc, range, formatParams, prettierVSCodeConfig, false);
}
exports.prettierFormatTs = prettierFormatTs;
function prettierFormat(doc, range, formatParams, prettierVSCodeConfig, isJavascript) {
    try {
        const bundledPrettier = require('prettier');
        let trailingComma = prettierVSCodeConfig.trailingComma;
        if (trailingComma === true) {
            trailingComma = 'es5';
        }
        else if (trailingComma === false) {
            trailingComma = 'none';
        }
        const prettierOptions = {
            printWidth: prettierVSCodeConfig.printWidth,
            tabWidth: prettierVSCodeConfig.tabWidth,
            singleQuote: prettierVSCodeConfig.singleQuote,
            trailingComma,
            bracketSpacing: prettierVSCodeConfig.bracketSpacing,
            jsxBracketSameLine: prettierVSCodeConfig.jsxBracketSameLine,
            parser: isJavascript ? 'babylon' : 'typescript',
            semi: prettierVSCodeConfig.semi,
            useTabs: prettierVSCodeConfig.useTabs
        };
        const formattedCode = '\n' + bundledPrettier.format(doc.getText(), prettierOptions);
        return [vscode_languageserver_types_1.TextEdit.replace(range, formattedCode)];
    }
    catch (e) {
        console.log('Prettier format failed');
        console.error(e);
        return [];
    }
}
//# sourceMappingURL=prettier.js.map