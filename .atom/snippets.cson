# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.js':
  'template':
    'prefix': 'template'
    'body': """
    <template>
      $0
    </template>
    """
  'describe':
    'prefix': 'des'
    'body': """
    describe("$1",()=>{
      $0
    }); // $1
    """
  'when':
    'prefix': 'when'
    'body': """
    describe("when $1",()=>{
      beforeEach(()=> spyOn(${2:moduleName},"$3").and.returnValue($4));
      afterEach(()=> expect(${2:moduleName}.$3).toHaveBeenCalledWith($5));
      $0
    });
      """
  'it':
    'prefix': 'it'
    'body': """
    it("should $1",()=>{
      $0
    });
    """
  'before':
    'prefix': 'bef'
    'body': """
    beforeEach(()=>$0);
    """
  'after':
    'prefix': 'aft'
    'body': """
    afterEach(()=>{
      $0
    });
    """
  'let1':
    'prefix': 'let1'
    'body': """
    let $1;
    beforeEach(()=>$1 = "{$1}");

    $0
    """
  'let2':
    'prefix': 'let2'
    'body': """
    let $1,$2;
    beforeEach(()=>$1 = "{$1}");
    beforeEach(()=>$2 = "{$2}");

    $0
    """
  'let3':
    'prefix': 'let3'
    'body': """
    let $1,$2,$3;
    beforeEach(()=>$1 = "{$1}");
    beforeEach(()=>$2 = "{$2}");
    beforeEach(()=>$3 = "{$3}");

    $0
    """
  'div':
    'prefix': '<div'
    'body':"""
     <div $1>
     $2
     </div>
     $0
     """
  'h1':
    'prefix': '<h1'
    'body':"""
     <h1$1> $2 </h1>
     $0
     """
  'h2':
    'prefix': '<h2'
    'body':"""
     <h2$1> $2 </h2>
     $0
     """
  'h3':
    'prefix': '<h3'
    'body':"""
     <h3$1> $2 </h3>
     $0
     """
  'h4':
    'prefix': '<h4'
    'body':"""
     <h4$1> $2 </h4>
     $0
     """
  'p':
    'prefix': '<p'
    'body':"""
     <p$1> $2 </p>
     $0
     """
  'span':
    'prefix': '<sp'
    'body':"""
     <span$1> $2 </span>
     $0
     """


'.text.html.basic':
  'icon':
      'prefix': 'icon'
      'body': '<i class="fa fa-$1">$0</i>'

'.source.vue':
  'icon2':
      'prefix': 'icon'
      'body': '<i class="fa fa-$1">$0</i>'
  #
  # 'script':
  #   'prefix': 'script'
  #   'body': """
  #   <script>
  #   export default {
  #     $0
  #   }
  #   </script>
  #   """
  # 'template2':
  #   'prefix': 'template'
  #   'body': """
  #   <template>
  #     $0
  #   </template>
  #   """
  # 'methods':
  #   'prefix':'methods'
  #   'body': """
  #   methods:{
  #     $0
  #   },
  #   """
  # 'components':
  #   'prefix':'components'
  #   'body': """
  #   components:{
  #     $0
  #   },
  #   """
  # 'computed':
  #   'prefix':'computed'
  #   'body': """
  #   computed:{
  #     $0
  #   },
  #   """
  # 'data func':
  #   'prefix':'df'
  #   'body': """
  #   data(){
  #     return {
  #       $0
  #       };
  #   },
  #   """
  # 'props':
  #   'prefix':'prop'
  #   'body':"""
  #     props: ['$1',],
  #     $0
  #     """
  # 'data not function':
  #   'prefix':'dnf'
  #   'body': """
  #   data:{
  #     $0
  #   }
  #   """
